#!/usr/bin/env bash

# install process for systemd usage
# copyright: © 2018 by Nuno Gonçalves
# license: MIT, see LICENSE for more details.

# -e exit if any command has a non-zero exit status
# avoids partial installation
set -e
# variables for print
NC="\e[0m"
GREEN="\e[1;32m"
RED="\e[1;31m"
TICK="[${GREEN}✓${NC}]"
CROSS="[${RED}✗”${NC}]"
INFO="[i]"
DONE="${GREEN} done!${NC}"
OVER="\\r\\033[K"
# starting
printf "  %b checking system..." "${INFO}"
# checking if systemd is installed
# installation depends on systemd to run
if [[ ! -x "$(command -v systemctl)" ]]; then
  printf "  %b systemd is required!\\n" "${CROSS}"
  exit 1
fi

printf "%b  %b systemd installed\\n" "${OVER}" "${TICK}"
# install
. ../install
# create systemd service
printf "  %b creating service..." "${INFO}"
cat >"${KEEPER_HOME}/config/keeper.service" <<-EOF
[Unit]
Description=keeper service
After=network.target

[Service]
Type=simple
ExecStart=${KEEPER_HOME}/bin/keeper
KillSignal=SIGTERM

[Install]
WantedBy=multi-user.target
EOF
sudo mv "${KEEPER_HOME}/config/keeper.service" "/etc/systemd/system/"
printf "%b  %b service created\\n" "${OVER}" "${TICK}"
# enable service
printf "  %b enabling and starting keeper..." "${INFO}"
chmod a+x "${KEEPER_HOME}/bin/keeper" && \
sudo systemctl daemon-reload && \
sudo systemctl enable keeper >/dev/null 2>&1 && \
sudo systemctl restart keeper
printf "%b  %b keeper enabled and started\\n" "${OVER}" "${TICK}"
printf "%b" "${DONE}\\n"
exit 0
